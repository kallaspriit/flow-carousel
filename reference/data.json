{
    "project": {
        "name": "FlowCarousel",
        "description": "",
        "version": "0.1.0",
        "url": ""
    },
    "files": {
        "src\\AbstractAnimator.js": {
            "name": "src\\AbstractAnimator.js",
            "modules": {},
            "classes": {
                "AbstractAnimator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\AbstractDataSource.js": {
            "name": "src\\AbstractDataSource.js",
            "modules": {},
            "classes": {
                "AbstractDataSource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\AbstractRenderer.js": {
            "name": "src\\AbstractRenderer.js",
            "modules": {},
            "classes": {
                "AbstractRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\ArrayDataSource.js": {
            "name": "src\\ArrayDataSource.js",
            "modules": {},
            "classes": {
                "ArrayDataSource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Config.js": {
            "name": "src\\Config.js",
            "modules": {},
            "classes": {
                "Config": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\DefaultAnimator.js": {
            "name": "src\\DefaultAnimator.js",
            "modules": {},
            "classes": {
                "DefaultAnimator": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Deferred.js": {
            "name": "src\\Deferred.js",
            "modules": {},
            "classes": {
                "Deferred": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\FlowCarousel.js": {
            "name": "src\\FlowCarousel.js",
            "modules": {},
            "classes": {
                "FlowCarousel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\HtmlDataSource.js": {
            "name": "src\\HtmlDataSource.js",
            "modules": {},
            "classes": {
                "HtmlDataSource": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\HtmlRenderer.js": {
            "name": "src\\HtmlRenderer.js",
            "modules": {},
            "classes": {
                "HtmlRenderer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\Util.js": {
            "name": "src\\Util.js",
            "modules": {},
            "classes": {
                "Util": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "AbstractAnimator": {
            "name": "AbstractAnimator",
            "shortname": "AbstractAnimator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\AbstractAnimator.js",
            "line": 5,
            "description": "Animator interface.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "carousel",
                    "description": "The carousel component",
                    "type": "FlowCarousel"
                }
            ]
        },
        "AbstractDataSource": {
            "name": "AbstractDataSource",
            "shortname": "AbstractDataSource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\AbstractDataSource.js",
            "line": 5,
            "description": "Data source interface.",
            "is_constructor": 1
        },
        "AbstractRenderer": {
            "name": "AbstractRenderer",
            "shortname": "AbstractRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\AbstractRenderer.js",
            "line": 5,
            "description": "Renderer interface.",
            "is_constructor": 1
        },
        "ArrayDataSource": {
            "name": "ArrayDataSource",
            "shortname": "ArrayDataSource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\ArrayDataSource.js",
            "line": 7,
            "description": "Data source interface.",
            "extends": "AbstractDataSource",
            "is_constructor": 1
        },
        "Config": {
            "name": "Config",
            "shortname": "Config",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\Config.js",
            "line": 5,
            "description": "Provides configuration.",
            "is_constructor": 1
        },
        "DefaultAnimator": {
            "name": "DefaultAnimator",
            "shortname": "DefaultAnimator",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\DefaultAnimator.js",
            "line": 7,
            "description": "Data source interface.",
            "extends": "AbstractAnimator",
            "is_constructor": 1,
            "params": [
                {
                    "name": "carousel",
                    "description": "The carousel component",
                    "type": "FlowCarousel"
                }
            ]
        },
        "Deferred": {
            "name": "Deferred",
            "shortname": "Deferred",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\Deferred.js",
            "line": 5,
            "description": "Provides utility functionality.\n\nUses the jQuery deferred implementation.",
            "is_constructor": 1
        },
        "FlowCarousel": {
            "name": "FlowCarousel",
            "shortname": "FlowCarousel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\FlowCarousel.js",
            "line": 29,
            "description": "FlowCarousel main class.\n\nResponsive paginated high-performance HTML5 carousel with AngularJS support.\n\nCopyright Stagnation Lab\nReleased under the MIT license\nhttps://github.com/kallaspriit/flow-carousel",
            "is_constructor": 1
        },
        "HtmlDataSource": {
            "name": "HtmlDataSource",
            "shortname": "HtmlDataSource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\HtmlDataSource.js",
            "line": 10,
            "description": "Data source interface.",
            "extends": "AbstractDataSource",
            "is_constructor": 1
        },
        "HtmlRenderer": {
            "name": "HtmlRenderer",
            "shortname": "HtmlRenderer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\HtmlRenderer.js",
            "line": 7,
            "description": "The default renderer for already existing HTML elements.",
            "extends": "AbstractRenderer",
            "is_constructor": 1
        },
        "Util": {
            "name": "Util",
            "shortname": "Util",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src\\Util.js",
            "line": 5,
            "description": "Provides utility functionality.",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "src\\AbstractAnimator.js",
            "line": 16,
            "description": "Animates the carousel to given item index position.",
            "itemtype": "method",
            "name": "animateToItem",
            "params": [
                {
                    "name": "itemIndex",
                    "description": "Index of the item",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "class": "AbstractAnimator"
        },
        {
            "file": "src\\AbstractDataSource.js",
            "line": 13,
            "description": "Returns the number of items in the dataset.",
            "itemtype": "method",
            "name": "getItemCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "AbstractDataSource"
        },
        {
            "file": "src\\AbstractDataSource.js",
            "line": 23,
            "description": "Fetches given range of items from the dataset.\n\nThis operation can be asynchronous and thus returns a promise that will be resolved once the data becomes\navailable or rejected when an error occurs.\n\nBy default the range is the entire dataset.\n\nThrows error if invalid range is requested.",
            "itemtype": "method",
            "name": "getItems",
            "params": [
                {
                    "name": "startIndex",
                    "description": "Range start index to fetch",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "endIndex",
                    "description": "Range end index to fetch",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "length"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "class": "AbstractDataSource"
        },
        {
            "file": "src\\AbstractRenderer.js",
            "line": 13,
            "description": "Renders a carousel item.\n\nThe data can be either a object of key-value pairs or an existing dom element to modify.\n\nRendering an item can be asynchronous so a promise is returned.",
            "itemtype": "method",
            "name": "renderItem",
            "params": [
                {
                    "name": "config",
                    "description": "Carousel configuration",
                    "type": "Config"
                },
                {
                    "name": "index",
                    "description": "Item position index",
                    "type": "Number"
                },
                {
                    "name": "data",
                    "description": "Item data object or existing dom element",
                    "type": "Object|DOMElement"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "class": "AbstractRenderer"
        },
        {
            "file": "src\\AbstractRenderer.js",
            "line": 32,
            "description": "Destroys a carousel item.",
            "itemtype": "method",
            "name": "destroyItem",
            "params": [
                {
                    "name": "index",
                    "description": "Item position index",
                    "type": "Number"
                }
            ],
            "class": "AbstractRenderer"
        },
        {
            "file": "src\\ArrayDataSource.js",
            "line": 22,
            "description": "Returns the number of items in the dataset.",
            "itemtype": "method",
            "name": "getItemCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "ArrayDataSource"
        },
        {
            "file": "src\\ArrayDataSource.js",
            "line": 32,
            "description": "Fetches given range of items from the dataset.\n\nThis operation can be asynchronous and thus returns a promise that will be resolved once the data becomes\navailable or rejected when an error occurs.\n\nBy default the range is the entire dataset.\n\nThrows error if invalid range is requested.",
            "itemtype": "method",
            "name": "getItems",
            "params": [
                {
                    "name": "startIndex",
                    "description": "Range start index to fetch",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "endIndex",
                    "description": "Range end index to fetch",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "length"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "class": "ArrayDataSource"
        },
        {
            "file": "src\\Config.js",
            "line": 13,
            "description": "Carousel orientation to use.\n\nOne of {{#crossLink \"Config/Orientation:property\"}}{{/crossLink}}.\n\nDefaults to horizontal.",
            "itemtype": "property",
            "name": "orientation",
            "type": "{Config/Orientation:property}",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 25,
            "description": "Number of items to render side-by-side when not using responsive layout.\n\nThis parameter is ignored when using responsive layout strategy.",
            "itemtype": "property",
            "name": "itemsPerPage",
            "type": "number",
            "default": "5",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 36,
            "description": "Item margin to use.",
            "itemtype": "property",
            "name": "margin",
            "type": "{number}",
            "default": "0",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 45,
            "description": "Should responsive layout be used by default.",
            "itemtype": "property",
            "name": "useResponsiveLayout",
            "type": "boolean",
            "default": "true",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 54,
            "description": "List of default responsive layout breakpoint.\n\nThe list should be ordered from the smallest size to the largest.",
            "itemtype": "property",
            "name": "responsiveBreakpoints",
            "type": "array",
            "default": "true",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 80,
            "description": "The interval at which to check for carousel wrap size changes so responsive layout could be applied.\n\nValue is in milliseconds.",
            "itemtype": "property",
            "name": "responsiveLayoutListenerInterval",
            "type": "{number}",
            "default": "100",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 91,
            "description": "The css classes prefix to use.",
            "itemtype": "property",
            "name": "cssPrefix",
            "type": "{string}",
            "default": "'flow-carousel-'",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 100,
            "description": "CSS class names to use.",
            "itemtype": "property",
            "name": "cssClasses",
            "type": "{object}",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 115,
            "description": "Optional custom data source to use.\n\nAs a special case, a simple array can be provided as data source which is converted to use\n{{#crossLink \"ArrayDataSource\"}}{{/crossLink}} implementation.\n\nIf none is provided then the {{#crossLink \"HtmlDataSource\"}}{{/crossLink}} is used.",
            "itemtype": "property",
            "name": "renderer",
            "type": "{AbstractRenderer|array}",
            "default": "null",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 129,
            "description": "Optional custom renderer to use.\n\nIf none is provided then the {{#crossLink \"HtmlRenderer\"}}{{/crossLink}} is used.",
            "itemtype": "property",
            "name": "renderer",
            "type": "{AbstractRenderer}",
            "default": "null",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 140,
            "description": "Optional custom animator to use.\n\nShould be an instance of {{#crossLink \"AbstractAnimator\"}}{{/crossLink}}.\n\nIf none is provided then the {{#crossLink \"DefaultAnimator\"}}{{/crossLink}} is used.",
            "itemtype": "property",
            "name": "animator",
            "type": "{AbstractAnimator}",
            "default": "null",
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 154,
            "description": "Enumeration of possible carousel orientations.",
            "itemtype": "property",
            "name": "Orientation",
            "static": 1,
            "type": "{object}",
            "class": "Config",
            "subprops": [
                {
                    "name": "HORIZONTAL='horizontal'",
                    "description": "Horizontal orientation",
                    "type": "String"
                },
                {
                    "name": "VERTIAL='vertical'",
                    "description": "Vertical orientation",
                    "type": "String"
                }
            ]
        },
        {
            "file": "src\\Config.js",
            "line": 168,
            "description": "Extends the base default configuration properties with user-defined values.",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "userConfig",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 189,
            "description": "Returns the number of items to render side-by-side based on the wrap size and\n{{#crossLink \"Config/responsiveBreakpoints:property\"}}{{/crossLink}} setting.",
            "itemtype": "method",
            "name": "getItemsPerPage",
            "params": [
                {
                    "name": "wrapSize",
                    "description": "Wrap size to base the calculation on",
                    "type": "Number"
                }
            ],
            "class": "Config"
        },
        {
            "file": "src\\Config.js",
            "line": 215,
            "description": "Returns class name to use by type.\n\nThe class name is constructed by combining the value of {{#crossLink \"Config/cssPrefix:property\"}}{{/crossLink}}\nand the mapping in {{#crossLink \"Config/cssClasses:property\"}}{{/crossLink}}.\n\nThrows error if invalid class name type is requested.",
            "itemtype": "method",
            "name": "getClassName",
            "params": [
                {
                    "name": "type",
                    "description": "Class name type, one of the keys in cssClasses",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Config"
        },
        {
            "file": "src\\DefaultAnimator.js",
            "line": 23,
            "description": "Animates the carousel to given item index position.",
            "itemtype": "method",
            "name": "animateToItem",
            "params": [
                {
                    "name": "itemIndex",
                    "description": "Index of the item",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "class": "DefaultAnimator"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 42,
            "description": "Component version number.",
            "itemtype": "property",
            "name": "version",
            "type": "string",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 50,
            "description": "Set to true once the component is initiated and to false once it's destroyed.",
            "itemtype": "property",
            "name": "_initiated",
            "type": "{boolean}",
            "default": "false",
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 60,
            "description": "Carousel configuration.",
            "itemtype": "property",
            "name": "_config",
            "type": "Config",
            "default": "Config",
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 70,
            "description": "Data source to use.\n\nData source is only set when the carousel is initiated with data or it's set with\n{{#crossLink \"FlowCarousel/setDataSource\"}}{{/crossLink}}.",
            "itemtype": "property",
            "name": "_dataSource",
            "type": "{AbstractDataSource}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 83,
            "description": "Renderer used to render the data.",
            "itemtype": "property",
            "name": "_renderer",
            "type": "{AbstractRenderer}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 93,
            "description": "Animator to use.",
            "itemtype": "property",
            "name": "_animator",
            "type": "{AbstractAnimator}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 103,
            "description": "Selector of elements to turn into a carousel.",
            "itemtype": "property",
            "name": "_selector",
            "type": "{string}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 113,
            "description": "The interval reference for responsive layout changes.",
            "itemtype": "property",
            "name": "_responsiveLayoutListenerInterval",
            "type": "{number}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 123,
            "description": "The top wrap elements jQuery object.",
            "itemtype": "property",
            "name": "_wrap",
            "type": "{DOMElement}",
            "default": "null",
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 133,
            "description": "Currently displayed page number starting from zero.",
            "itemtype": "property",
            "name": "_currentPageIndex",
            "type": "{number}",
            "default": "0",
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 143,
            "description": "Shortcut to the list of possible orientations from Config.",
            "itemtype": "property",
            "name": "Orientation",
            "type": "{object}",
            "class": "FlowCarousel",
            "subprops": [
                {
                    "name": "HORIZONTAL='horizontal'",
                    "description": "Horizontal orientation",
                    "type": "String"
                },
                {
                    "name": "VERTIAL='vertical'",
                    "description": "Vertical orientation",
                    "type": "String"
                }
            ]
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 154,
            "description": "Initializes the carousel component.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "selector",
                    "description": "Selector of elements to turn into a carousel",
                    "type": "String"
                },
                {
                    "name": "userConfig",
                    "description": "Optional user configuration object overriding defaults in the\n{{#crossLink \"Config\"}}{{/crossLink}}.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 218,
            "description": "Returns current configuration.",
            "itemtype": "method",
            "name": "getConfig",
            "return": {
                "description": "",
                "type": "Config"
            },
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 228,
            "description": "Returns current animator instance.",
            "itemtype": "method",
            "name": "getAnimator",
            "return": {
                "description": "",
                "type": "Config"
            },
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 238,
            "description": "Sets the data source to use.\n\nExpects either an instance of AbstractDataSource (you can roll your own) or a simple array that will be\nconverted to an ArrayDataSource.\n\nThis can optionally be set in the init method as second argument.\n\nThis method supports call chaining by returning itself.",
            "itemtype": "method",
            "name": "setDataSource",
            "params": [
                {
                    "name": "Either",
                    "description": "an instance of AbstractDataSource or a simple array",
                    "type": "AbstractDataSource|array"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "FlowCarousel"
            },
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 268,
            "description": "Returns the data used for rendering the component.\n\nReturns null if the component has not yet been initialized.",
            "itemtype": "method",
            "name": "getDataSource",
            "return": {
                "description": "Used data source or null if not available yet",
                "type": "AbstractDataSource|null"
            },
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 280,
            "description": "Navigates to a carousel item by index.\n\nThrows error if out of bounds index is requested.\n\nReturns deferred promise that will be resolved once the animation completes.",
            "itemtype": "method",
            "name": "navigateToItem",
            "params": [
                {
                    "name": "itemIndex",
                    "description": "Item index to navigate to.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "Deferred promise that will be resolved once the animation completes",
                "type": "Deferred.Promise"
            },
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 306,
            "description": "Initializes the top-level wrap element.\n\nIf the selector matches multiple elements, only the first one is considered.\n\nIf the selector does not match any elements, an error is thrown.",
            "itemtype": "method",
            "name": "_setupElement",
            "params": [
                {
                    "name": "selector",
                    "description": "Wraps selector",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 331,
            "description": "Initializes a single wrap element.",
            "itemtype": "method",
            "name": "_setupCarousel",
            "params": [
                {
                    "name": "wrap",
                    "description": "The carousel wrap to setup",
                    "type": "DOMelement"
                },
                {
                    "name": "orientation",
                    "description": "Orientation to use",
                    "type": "Config/Orientation:property"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 376,
            "description": "Sets up the layout and renders the initial set of items.\n\nSince fetching and rendering items can be asyncronous, this method returns a promise.",
            "itemtype": "method",
            "name": "_setupLayout",
            "params": [
                {
                    "name": "element",
                    "description": "Element to setup items in",
                    "type": "DOMelement"
                },
                {
                    "name": "orientation",
                    "description": "Orientation to use",
                    "type": "Config/Orientation:property"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 396,
            "description": "Returns the range of items that should be rendered to display given page.",
            "itemtype": "method",
            "name": "_getRenderRangeForPage",
            "params": [
                {
                    "name": "pageIndex",
                    "description": "Page number starting from zero",
                    "type": "Number"
                },
                {
                    "name": "itemsPerPage",
                    "description": "How many items are shown on one page",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The start and end index of range to render",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 412,
            "description": "Renders a range of carousel items.",
            "itemtype": "method",
            "name": "_renderItemRange",
            "params": [
                {
                    "name": "startIndex",
                    "description": "Range start index",
                    "type": "Number"
                },
                {
                    "name": "endIndex",
                    "description": "Range end index",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 439,
            "description": "Renders given carousel items.",
            "itemtype": "method",
            "name": "_renderItems",
            "params": [
                {
                    "name": "items",
                    "description": "Items to render",
                    "type": "Array"
                },
                {
                    "name": "startIndex",
                    "description": "Range start index",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 538,
            "description": "Re-initializes the layout.\n\nUsed to apply responsive layout when the wrap size changes.\n\nSince fetching and rendering items can be asynchronous, this method returns a promise.",
            "itemtype": "method",
            "name": "_reLayout",
            "params": [
                {
                    "name": "element",
                    "description": "Element to layout",
                    "type": "DOMelement"
                },
                {
                    "name": "orientation",
                    "description": "Orientation to use",
                    "type": "Config/Orientation:property"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 556,
            "description": "Sets up main wrap size change listener to apply responsive layout.",
            "itemtype": "method",
            "name": "_setupResponsiveLayoutListener",
            "params": [
                {
                    "name": "element",
                    "description": "Element to listen changes of",
                    "type": "DOMelement"
                },
                {
                    "name": "orientation",
                    "description": "Orientation to use",
                    "type": "Config/Orientation:property"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 570,
            "description": "Checks whether the carousel wrap size has changed and triggers re-layout if so.",
            "itemtype": "method",
            "name": "_validateResponsiveLayout",
            "params": [
                {
                    "name": "element",
                    "description": "Element to validate",
                    "type": "DOMelement"
                },
                {
                    "name": "orientation",
                    "description": "Orientation to use",
                    "type": "Config/Orientation:property"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 594,
            "description": "Calculates and returns a single item size based on wrap size and items per page.",
            "itemtype": "method",
            "name": "_calculateItemSize",
            "params": [
                {
                    "name": "wrapSize",
                    "description": "Wrapping element size",
                    "type": "Number"
                },
                {
                    "name": "itemsPerPage",
                    "description": "Number of items per page",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 606,
            "description": "Returns the outer size of an element.\n\nHorizontal orientation returns element innter width and vertical inner height.",
            "itemtype": "method",
            "name": "_getWrapSize",
            "params": [
                {
                    "name": "element",
                    "description": "Element to get size of",
                    "type": "DOMelement"
                },
                {
                    "name": "orientation",
                    "description": "Orientation to get size of",
                    "type": "Config/Orientation:property"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\FlowCarousel.js",
            "line": 627,
            "description": "Returns the extra padding+margin+border size of given element in given orientation.\n\nTODO handle border-box sizing",
            "itemtype": "method",
            "name": "_getExtraSize",
            "params": [
                {
                    "name": "element",
                    "description": "Element to get size of",
                    "type": "DOMelement"
                },
                {
                    "name": "orientation",
                    "description": "Orientation to get size of",
                    "type": "Config/Orientation:property"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "FlowCarousel"
        },
        {
            "file": "src\\HtmlDataSource.js",
            "line": 26,
            "description": "Returns the number of items in the dataset.",
            "itemtype": "method",
            "name": "getItemCount",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "HtmlDataSource"
        },
        {
            "file": "src\\HtmlDataSource.js",
            "line": 36,
            "description": "Fetches given range of items from the dataset.\n\nThis operation can be asynchronous and thus returns a promise that will be resolved once the data becomes\navailable or rejected when an error occurs.\n\nBy default the range is the entire dataset.\n\nThrows error if invalid range is requested.",
            "itemtype": "method",
            "name": "getItems",
            "params": [
                {
                    "name": "startIndex",
                    "description": "Range start index to fetch",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "endIndex",
                    "description": "Range end index to fetch",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "length"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "class": "HtmlDataSource"
        },
        {
            "file": "src\\HtmlDataSource.js",
            "line": 72,
            "description": "Extracts the HTML item elements from the given wrap and uses them as data.",
            "itemtype": "method",
            "name": "_setupData",
            "params": [
                {
                    "name": "wrap",
                    "description": "Wrap to get items from",
                    "type": "DOMElement"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "HtmlDataSource"
        },
        {
            "file": "src\\HtmlRenderer.js",
            "line": 20,
            "description": "Renders a carousel item.\n\nThe data can be either a object of key-value pairs or an existing dom element to modify.\n\nRendering an item can be asynchronous so a promise is returned.\n\nThe data is an already existing DOMElement for HtmlRenderer.",
            "itemtype": "method",
            "name": "renderItem",
            "params": [
                {
                    "name": "config",
                    "description": "Carousel configuration",
                    "type": "Config"
                },
                {
                    "name": "index",
                    "description": "Item position index",
                    "type": "Number"
                },
                {
                    "name": "element",
                    "description": "Item data object or existing dom element",
                    "type": "Object|DOMElement"
                }
            ],
            "return": {
                "description": "",
                "type": "Deferred.Promise"
            },
            "class": "HtmlRenderer"
        },
        {
            "file": "src\\HtmlRenderer.js",
            "line": 44,
            "description": "Destroys a carousel item.",
            "itemtype": "method",
            "name": "destroyItem",
            "params": [
                {
                    "name": "index",
                    "description": "Item position index",
                    "type": "Number"
                }
            ],
            "class": "HtmlRenderer"
        },
        {
            "file": "src\\Util.js",
            "line": 13,
            "description": "Returns whether given arguments is an object (and not an array nor null).",
            "itemtype": "method",
            "name": "isObject",
            "params": [
                {
                    "name": "arg",
                    "description": "Arguments to check",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Util"
        },
        {
            "file": "src\\Util.js",
            "line": 25,
            "description": "Returns whether given arguments is an array (and not a object nor null).",
            "itemtype": "method",
            "name": "isArray",
            "params": [
                {
                    "name": "arg",
                    "description": "Arguments to check",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "static": 1,
            "class": "Util"
        }
    ],
    "warnings": []
}